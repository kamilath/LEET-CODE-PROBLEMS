class TreeNode(object):
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
class Solution(object):
    def recoverTree(self, root):
        def inorder(node):
            if not node:
                return 
            inorder(node.left)    
            if prev[0] and prev[0].val>node.val:
                if not first[0]:
                    first[0]=prev[0]
                second[0]=node
            prev[0]=node
            inorder(node.right)  
        first,second,prev=[None],[None],[None]     
        inorder(root)      
        first[0].val,second[0].val=second[0].val,first[0].val

        
        
        
