class ListNode(object):
     def __init__(self, val=0, next=None):
         self.val = val
         self.next = next
class TreeNode(object):
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
class Solution(object):
    def sortedListToBST(self, head):
        def a(head):
            arr=[]
            while head:
                arr.append(head.val)
                head=head.next
            return arr
        def b(arr,left,right):
            if left>right:
                return None
            mid=(left+right)//2
            root=TreeNode(arr[mid])           
            root.left=b(arr,left,mid-1)
            root.right=b(arr,mid+1,right)
            return root 
        arr=a(head)
        return b(arr,0,len(arr)-1)       
