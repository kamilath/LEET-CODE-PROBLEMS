class Solution(object):
    def exist(self, board, word):
        def backtrack(r,c,k):
            if k==len(word):
                return True
            if r<0 or c<0 or r>=len(board) or c>=len(board[0]) or board[r][c]!=word[k]:
                return False
            temp=board[r][c]  
            board[r][c]=''
            if backtrack(r+1,c,k+1) or backtrack(r,c+1,k+1) or backtrack(r-1,c,k+1) or backtrack(r,c-1,k+1):
                return True
            board[r][c]=temp
            return False
        for r in range(len(board)):
            for c in range(len(board[0])):
                if backtrack(r,c,0):
                    return True
        return False                  
        
        
